{"ast":null,"code":"var _jsxFileName = \"/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/plants/createPlant/CreatePlant.js\",\n    _s = $RefreshSig$();\n\n// import { formatMs, FormGroup } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './CreatePlant.css';\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePlant = props => {\n  _s();\n\n  const [plantName, setPlantName] = useState('');\n  const [typeOfPlant, setTypeOfPlant] = useState('');\n  const [lightingNeeds, setLightingNeeds] = useState('');\n  const [waterNeeds, setWaterNeeds] = useState('');\n  const [fertilizerNeeds, setFertilizerNeeds] = useState('');\n  const [notes, setNotes] = useState('');\n\n  const postPlant = e => {\n    e.preventDefault();\n    fetch('http://wd85-plant-it.herokuapp.com/plant/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        plantName: plantName,\n        typeOfPlant: typeOfPlant,\n        lightingNeeds: lightingNeeds,\n        waterNeeds: waterNeeds,\n        fertilizerNeeds: fertilizerNeeds,\n        notes: notes\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.sessionToken\n      })\n    }).then(res => res.json()).then(json => {\n      console.log(json);\n      props.setCreatePlant(false);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    //! We can change this table to use something other than reactstrap \n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: true,\n        ...props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.createActiveOff,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faArrowAltCircleLeft,\n              size: \"3x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: postPlant,\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Plant Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: plantName,\n                placeholder: \"Lavender\",\n                onChange: e => setPlantName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Type of Plant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: typeOfPlant,\n                placeholder: \"Shrub\",\n                onChange: e => setTypeOfPlant(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Lighting Needs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: lightingNeeds,\n                placeholder: \"Full sun\",\n                onChange: e => setLightingNeeds(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Water Needs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: waterNeeds,\n                placeholder: \"drought-tolerant after established; water regularly when young\",\n                onChange: e => setWaterNeeds(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Fertilizer Needs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: fertilizerNeeds,\n                placeholder: \"very little, slow release once per spring at most\",\n                onChange: e => setFertilizerNeeds(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: notes,\n                placeholder: \"Part of the mint family; smells wonderful!\",\n                onChange: e => setNotes(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: () => {\n                props.createActiveOff();\n                props.fetchPlants();\n              },\n              children: \"Plant it!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(CreatePlant, \"gP+Oz9mp8KkdRihUyw5zJXgvCrw=\");\n\n_c = CreatePlant;\nexport default CreatePlant;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePlant\");","map":{"version":3,"sources":["/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/plants/createPlant/CreatePlant.js"],"names":["React","useState","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","FontAwesomeIcon","faArrowAltCircleLeft","CreatePlant","props","plantName","setPlantName","typeOfPlant","setTypeOfPlant","lightingNeeds","setLightingNeeds","waterNeeds","setWaterNeeds","fertilizerNeeds","setFertilizerNeeds","notes","setNotes","postPlant","e","preventDefault","fetch","method","body","JSON","stringify","headers","Headers","sessionToken","then","res","json","console","log","setCreatePlant","createActiveOff","target","value","fetchPlants"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,KAA/C,EAAsDC,WAAtD,EAAmEC,SAAnE,EAA8EC,WAA9E,QAAgG,YAAhG;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,oBAAT,QAAqC,mCAArC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAM0B,SAAS,GAAGC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,KAAK,CAAC,iDAAD,EAAoD;AACrDC,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBnB,QAAAA,SAAS,EAAEA,SADM;AAEjBE,QAAAA,WAAW,EAAEA,WAFI;AAGjBE,QAAAA,aAAa,EAAEA,aAHE;AAIjBE,QAAAA,UAAU,EAAEA,UAJK;AAKjBE,QAAAA,eAAe,EAAEA,eALA;AAMjBE,QAAAA,KAAK,EAAEA;AANU,OAAf,CAF+C;AAUrDU,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,wBAAgB,kBADC;AAEjB,yBAAiBtB,KAAK,CAACuB;AAFN,OAAZ;AAV4C,KAApD,CAAL,CAeCC,IAfD,CAeMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAfb,EAgBCF,IAhBD,CAgBME,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA1B,MAAAA,KAAK,CAAC6B,cAAN,CAAqB,KAArB;AACH,KAnBD;AAoBH,GAvBD;;AAyBA;AAAA;AAEI;AACA;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,IAAf;AAAA,WACI7B,KADJ;AAEA,QAAA,IAAI,EAAC,IAFL;AAGA,2BAAgB,+BAHhB;AAIA,QAAA,QAAQ,MAJR;AAAA,gCAMI,QAAC,WAAD;AAAA,kCACA;AAAQ,YAAA,OAAO,EAAEA,KAAK,CAAC8B,eAAvB;AAAA,mCAAwC,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAEhC,oBAAvB;AAA6C,cAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAUA,QAAC,SAAD;AAAA,iCACA,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEe,SAAhB;AAAA,oCACI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAEZ,SAA1B;AAAqC,gBAAA,WAAW,EAAC,UAAjD;AAA4D,gBAAA,QAAQ,EAAGa,CAAD,IAAOZ,YAAY,CAACY,CAAC,CAACiB,MAAF,CAASC,KAAV;AAAzF;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAE7B,WAA1B;AAAuC,gBAAA,WAAW,EAAC,OAAnD;AAA2D,gBAAA,QAAQ,EAAGW,CAAD,IAAOV,cAAc,CAACU,CAAC,CAACiB,MAAF,CAASC,KAAV;AAA1F;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAE3B,aAA1B;AAAyC,gBAAA,WAAW,EAAC,UAArD;AAAgE,gBAAA,QAAQ,EAAGS,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAACiB,MAAF,CAASC,KAAV;AAAjG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAaI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAEzB,UAA1B;AAAsC,gBAAA,WAAW,EAAC,gEAAlD;AAAmH,gBAAA,QAAQ,EAAGO,CAAD,IAAON,aAAa,CAACM,CAAC,CAACiB,MAAF,CAASC,KAAV;AAAjJ;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAiBI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAEvB,eAA1B;AAA2C,gBAAA,WAAW,EAAC,mDAAvD;AAA2G,gBAAA,QAAQ,EAAGK,CAAD,IAAOJ,kBAAkB,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV;AAA9I;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAqBI,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,KAAK,EAAErB,KAA1B;AAAiC,gBAAA,WAAW,EAAC,4CAA7C;AAA0F,gBAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACiB,MAAF,CAASC,KAAV;AAAnH;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ,eAyBI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAI;AAAChC,gBAAAA,KAAK,CAAC8B,eAAN;AAAyB9B,gBAAAA,KAAK,CAACiC,WAAN;AAAoB,eAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AA8CH,CAhFD;;GAAMlC,W;;KAAAA,W;AAkFN,eAAeA,WAAf","sourcesContent":["// import { formatMs, FormGroup } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './CreatePlant.css';\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst CreatePlant = (props) => {\n    const [plantName, setPlantName] = useState('');\n    const [typeOfPlant, setTypeOfPlant] = useState('');\n    const [lightingNeeds, setLightingNeeds] = useState('');\n    const [waterNeeds, setWaterNeeds] = useState('');\n    const [fertilizerNeeds, setFertilizerNeeds] = useState('');\n    const [notes, setNotes] = useState('');\n    \n\n    const postPlant = e => {\n        e.preventDefault();\n\n        fetch('http://wd85-plant-it.herokuapp.com/plant/create', {\n            method: 'POST',\n            body: JSON.stringify({\n                plantName: plantName,\n                typeOfPlant: typeOfPlant,\n                lightingNeeds: lightingNeeds,\n                waterNeeds: waterNeeds,\n                fertilizerNeeds: fertilizerNeeds,\n                notes: notes,\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.sessionToken\n            })\n        })\n        .then(res => res.json())\n        .then(json => {\n            console.log(json);\n            props.setCreatePlant(false);\n        })\n    }\n\n    return (\n\n        //! We can change this table to use something other than reactstrap \n        <div>\n            <Modal isOpen={true}\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n                <ModalHeader>\n                <button onClick={props.createActiveOff}><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\"/></button>\n                <h3>Details</h3>\n                </ModalHeader>\n            <ModalBody>\n            <Form onSubmit={postPlant}>\n                <FormGroup>\n                    <Label>Plant Name</Label>\n                    <Input type='text' value={plantName} placeholder='Lavender' onChange={(e) => setPlantName(e.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Type of Plant</Label>\n                    <Input type='text' value={typeOfPlant} placeholder='Shrub' onChange={(e) => setTypeOfPlant(e.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Lighting Needs</Label>\n                    <Input type='text' value={lightingNeeds} placeholder='Full sun' onChange={(e) => setLightingNeeds(e.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Water Needs</Label>\n                    <Input type='text' value={waterNeeds} placeholder='drought-tolerant after established; water regularly when young' onChange={(e) => setWaterNeeds(e.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Fertilizer Needs</Label>\n                    <Input type='text' value={fertilizerNeeds} placeholder='very little, slow release once per spring at most' onChange={(e) => setFertilizerNeeds(e.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Notes</Label>\n                    <Input type='text' value={notes} placeholder='Part of the mint family; smells wonderful!' onChange={(e) => setNotes(e.target.value)} />\n                </FormGroup>\n                <Button type='submit' onClick={()=>{props.createActiveOff(); props.fetchPlants()}}>Plant it!</Button>\n            </Form>\n            </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CreatePlant; \n\n"]},"metadata":{},"sourceType":"module"}