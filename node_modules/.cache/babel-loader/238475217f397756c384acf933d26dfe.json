{"ast":null,"code":"import _slicedToArray from\"/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';//import DisplayPlants from './plantTable/PlantTable';\n//import CreatePlant from './createPlant/CreatePlant';\n//import PlantView from './PlantView';\nimport{Container,Row}from'reactstrap';import GardenTable from'./GardenTable';import{jsx as _jsx}from\"react/jsx-runtime\";var GardenIndex=function GardenIndex(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),viewActive=_useState4[0],setViewActive=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),plantToView=_useState6[0],setPlantToView=_useState6[1];var _useState7=useState(' '),_useState8=_slicedToArray(_useState7,2),plantName=_useState8[0],setPlantName=_useState8[1];var baseURL='http://wd85-plant-it2.herokuapp.com/garden/all';var fetchGarden=function fetchGarden(){fetch(baseURL,{method:'GET',headers:new Headers({'Content-Type':'application/json','Authorization':props.token})}).then(function(res){return res.json();}).then(function(plantData){setPlants(plantData);console.log(plants,plantData);});};//view functions\nvar viewPlant=function viewPlant(plant){setPlantToView(plant);//     console.log(garden);\n};var viewOn=function viewOn(){setViewActive(true);};var viewOff=function viewOff(){setViewActive(false);};useEffect(function(){fetchGarden();},[]);return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(GardenTable,{plants:plants,viewPlant:viewPlant,viewOn:viewOn,fetchGarden:fetchGarden,token:props.token})})});};export default GardenIndex;","map":{"version":3,"sources":["/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/gardens/GardenIndex.js"],"names":["React","useState","useEffect","Container","Row","GardenTable","GardenIndex","props","plants","setPlants","viewActive","setViewActive","plantToView","setPlantToView","plantName","setPlantName","baseURL","fetchGarden","fetch","method","headers","Headers","token","then","res","json","plantData","console","log","viewPlant","plant","viewOn","viewOff"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA;AACA;AACA;AACA,OAASC,SAAT,CAAoBC,GAApB,KAA+B,YAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,2CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAE3B,cAA4BN,QAAQ,CAAC,EAAD,CAApC,wCAAOO,MAAP,eAAeC,SAAf,eACA,eAAoCR,QAAQ,CAAC,KAAD,CAA5C,yCAAOS,UAAP,eAAmBC,aAAnB,eACA,eAAsCV,QAAQ,CAAC,EAAD,CAA9C,yCAAOW,WAAP,eAAoBC,cAApB,eACA,eAAkCZ,QAAQ,CAAC,GAAD,CAA1C,yCAAOa,SAAP,eAAkBC,YAAlB,eACA,GAAIC,CAAAA,OAAO,CAAG,gDAAd,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBC,KAAK,CAACF,OAAD,CAAU,CACXG,MAAM,CAAE,KADG,CAEXC,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAY,CACjB,eAAgB,kBADC,CAEjB,gBAAiBd,KAAK,CAACe,KAFN,CAAZ,CAFE,CAAV,CAAL,CAOKC,IAPL,CAOU,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPV,EAQKF,IARL,CAQU,SAACG,SAAD,CAAe,CACjBjB,SAAS,CAACiB,SAAD,CAAT,CACAC,OAAO,CAACC,GAAR,CAAYpB,MAAZ,CAAoBkB,SAApB,EACH,CAXL,EAYH,CAbD,CAiBA;AACA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBjB,cAAc,CAACiB,KAAD,CAAd,CACA;AACH,CAHD,CAIA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACrBpB,aAAa,CAAC,IAAD,CAAb,CACH,CAFG,CAGJ,GAAMqB,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBrB,aAAa,CAAC,KAAD,CAAb,CACH,CAFD,CAMAT,SAAS,CAAC,UAAM,CACZe,WAAW,GACd,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACI,KAAC,SAAD,wBACI,KAAC,GAAD,wBACI,KAAC,WAAD,EAAa,MAAM,CAAET,MAArB,CAA6B,SAAS,CAAEqB,SAAxC,CAAmD,MAAM,CAAEE,MAA3D,CAAmE,WAAW,CAAEd,WAAhF,CAA6F,KAAK,CAAEV,KAAK,CAACe,KAA1G,EADJ,EADJ,EADJ,CASC,CApDD,CAyDA,cAAehB,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import DisplayPlants from './plantTable/PlantTable';\n//import CreatePlant from './createPlant/CreatePlant';\n//import PlantView from './PlantView';\nimport { Container, Row } from 'reactstrap';\nimport GardenTable from './GardenTable'\n\nconst GardenIndex = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [viewActive, setViewActive] = useState(false);\n    const [plantToView, setPlantToView] = useState([]);\n    const [plantName, setPlantName] = useState(' ')\n    let baseURL = 'http://wd85-plant-it2.herokuapp.com/garden/all';\n\n    const fetchGarden = () => {\n        fetch(baseURL, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        })\n            .then((res) => res.json())\n            .then((plantData) => {\n                setPlants(plantData)\n                console.log(plants, plantData);\n            })\n    }\n\n\n\n    //view functions\n    const viewPlant = (plant) => {\n        setPlantToView(plant);\n        //     console.log(garden);\n    }\n    const viewOn = () => {\n    setViewActive(true)\n}\nconst viewOff = () => {\n    setViewActive(false)\n}\n\n\n\nuseEffect(() => {\n    fetchGarden();\n}, [])\n\nreturn (\n    <Container>\n        <Row>\n            <GardenTable plants={plants} viewPlant={viewPlant} viewOn={viewOn} fetchGarden={fetchGarden} token={props.token} />\n\n            {/* {viewActive ? <GardenView plantToView={plantToView} viewOff={viewOff} token={props.token} fetchGarden={fetchGarden} /> : <></>} */}\n        </Row>\n    </Container>\n)\n}\n\n\n\n\nexport default GardenIndex;"]},"metadata":{},"sourceType":"module"}