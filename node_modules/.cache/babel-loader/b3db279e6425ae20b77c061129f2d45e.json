{"ast":null,"code":"var _jsxFileName = \"/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/gardens/GardenIndex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import DisplayPlants from './plantTable/PlantTable';\n//import CreatePlant from './createPlant/CreatePlant';\n//import PlantView from './PlantView';\n\nimport { Container, Row } from 'reactstrap';\nimport GardenTable from './GardenTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GardenIndex = props => {\n  _s();\n\n  const [plants, setPlants] = useState([]);\n  const [viewActive, setViewActive] = useState(false);\n  const [plantToView, setPlantToView] = useState([]);\n  const [plantName, setPlantName] = useState(' ');\n  let baseURL = 'http://wd85-plant-it.herokuapp.com/garden/all';\n\n  const fetchGarden = () => {\n    fetch(baseURL, {\n      method: 'GET',\n      headers: new Headers({\n        'Content-Type': 'application/json',\n        'Authorization': props.token\n      })\n    }).then(res => res.json()).then(plantData => {\n      setPlants(plantData);\n      console.log(plants, plantData);\n    });\n  }; //view functions\n\n\n  const viewPlant = plant => {\n    setPlantToView(plant); //     console.log(garden);\n  };\n\n  const viewOn = () => {\n    setViewActive(true);\n  };\n\n  const viewOff = () => {\n    setViewActive(false);\n  };\n\n  useEffect(() => {\n    fetchGarden();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(GardenTable, {\n        plants: plants,\n        viewPlant: viewPlant,\n        viewOn: viewOn,\n        fetchGarden: fetchGarden,\n        token: props.token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GardenIndex, \"mTP5ifzatwAapwA9gJFROj2OjyA=\");\n\n_c = GardenIndex;\nexport default GardenIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"GardenIndex\");","map":{"version":3,"sources":["/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/gardens/GardenIndex.js"],"names":["React","useState","useEffect","Container","Row","GardenTable","GardenIndex","props","plants","setPlants","viewActive","setViewActive","plantToView","setPlantToView","plantName","setPlantName","baseURL","fetchGarden","fetch","method","headers","Headers","token","then","res","json","plantData","console","log","viewPlant","plant","viewOn","viewOff"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,YAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,GAAD,CAA1C;AACA,MAAIe,OAAO,GAAG,+CAAd;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAACF,OAAD,EAAU;AACXG,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,wBAAgB,kBADC;AAEjB,yBAAiBd,KAAK,CAACe;AAFN,OAAZ;AAFE,KAAV,CAAL,CAOKC,IAPL,CAOWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPnB,EAQKF,IARL,CAQWG,SAAD,IAAe;AACjBjB,MAAAA,SAAS,CAACiB,SAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ,EAAoBkB,SAApB;AACH,KAXL;AAYH,GAbD,CAR2B,CAyB3B;;;AACA,QAAMG,SAAS,GAAIC,KAAD,IAAW;AACzBjB,IAAAA,cAAc,CAACiB,KAAD,CAAd,CADyB,CAEzB;AACH,GAHD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACrBpB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFG;;AAGJ,QAAMqB,OAAO,GAAG,MAAM;AAClBrB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,MAAM,EAAET,MAArB;AAA6B,QAAA,SAAS,EAAEqB,SAAxC;AAAmD,QAAA,MAAM,EAAEE,MAA3D;AAAmE,QAAA,WAAW,EAAEd,WAAhF;AAA6F,QAAA,KAAK,EAAEV,KAAK,CAACe;AAA1G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASC,CApDD;;GAAMhB,W;;KAAAA,W;AAyDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import DisplayPlants from './plantTable/PlantTable';\n//import CreatePlant from './createPlant/CreatePlant';\n//import PlantView from './PlantView';\nimport { Container, Row } from 'reactstrap';\nimport GardenTable from './GardenTable'\n\nconst GardenIndex = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [viewActive, setViewActive] = useState(false);\n    const [plantToView, setPlantToView] = useState([]);\n    const [plantName, setPlantName] = useState(' ')\n    let baseURL = 'http://wd85-plant-it.herokuapp.com/garden/all';\n\n    const fetchGarden = () => {\n        fetch(baseURL, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        })\n            .then((res) => res.json())\n            .then((plantData) => {\n                setPlants(plantData)\n                console.log(plants, plantData);\n            })\n    }\n\n\n\n    //view functions\n    const viewPlant = (plant) => {\n        setPlantToView(plant);\n        //     console.log(garden);\n    }\n    const viewOn = () => {\n    setViewActive(true)\n}\nconst viewOff = () => {\n    setViewActive(false)\n}\n\n\n\nuseEffect(() => {\n    fetchGarden();\n}, [])\n\nreturn (\n    <Container>\n        <Row>\n            <GardenTable plants={plants} viewPlant={viewPlant} viewOn={viewOn} fetchGarden={fetchGarden} token={props.token} />\n\n            {/* {viewActive ? <GardenView plantToView={plantToView} viewOff={viewOff} token={props.token} fetchGarden={fetchGarden} /> : <></>} */}\n        </Row>\n    </Container>\n)\n}\n\n\n\n\nexport default GardenIndex;"]},"metadata":{},"sourceType":"module"}