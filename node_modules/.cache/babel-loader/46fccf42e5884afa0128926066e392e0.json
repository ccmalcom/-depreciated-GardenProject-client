{"ast":null,"code":"import _slicedToArray from\"/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,FormGroup,Label,Input,Button}from'reactstrap';/** */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){console.log(props);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),emailAddress=_useState2[0],setEmailAddress=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var handleSubmit=function handleSubmit(e){e.preventDefault();fetch('https://wd85-plant-it2.herokuapp.com/user/login',{method:'POST',body:JSON.stringify({user:{emailAddress:emailAddress,password:password}}),headers:new Headers({'Content-Type':'application/json'})}).then(function(response){return response.json();}).then(function(data){props.updateToken(data.sessionToken);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"Login\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login/Register\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"emailAddress\",children:\"Email\"}),/*#__PURE__*/_jsx(Input,{onChange:function onChange(e){return setEmailAddress(e.target.value);},name:\"emailAddress\",value:emailAddress})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Input,{onChange:function onChange(e){return setPassword(e.target.value);},name:\"password\",value:password})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{type:\"submit\",style:{textAlign:'center'},children:\"Login\"})]})]});};export default Login;","map":{"version":3,"sources":["/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/auth/Login.js"],"names":["React","useState","Form","FormGroup","Label","Input","Button","Login","props","console","log","emailAddress","setEmailAddress","password","setPassword","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","user","headers","Headers","then","response","json","data","updateToken","sessionToken","target","value","textAlign"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,SAAf,CAA0BC,KAA1B,CAAiCC,KAAjC,CAAwCC,MAAxC,KAAsD,YAAtD,CAGA,M,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,cAAwCP,QAAQ,CAAC,EAAD,CAAhD,wCAAOU,YAAP,eAAqBC,eAArB,eACA,eAAgCX,QAAQ,CAAC,EAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxBA,CAAC,CAACC,cAAF,GAEAC,KAAK,CAAC,iDAAD,CAAoD,CACrDC,MAAM,CAAE,MAD6C,CAErDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CACF,CAACC,IAAI,CAAC,CAACZ,YAAY,CAAEA,YAAf,CAA6BE,QAAQ,CAAEA,QAAvC,CAAN,CADE,CAF+C,CAKrDW,OAAO,CAAE,GAAIC,CAAAA,OAAJ,CAAa,CAClB,eAAgB,kBADE,CAAb,CAL4C,CAApD,CAAL,CAQGC,IARH,CASI,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EATJ,EAUEF,IAVF,CAUO,SAACG,IAAD,CAAU,CACbrB,KAAK,CAACsB,WAAN,CAAkBD,IAAI,CAACE,YAAvB,EACH,CAZD,EAaH,CAhBD,CAkBA,mBACI,aAAK,SAAS,CAAC,OAAf,wBACI,sCADJ,cAEI,MAAC,IAAD,EAAM,QAAQ,CAAEhB,YAAhB,wBACI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,cAAf,mBADJ,cAEI,KAAC,KAAD,EAAO,QAAQ,CAAE,kBAACC,CAAD,QAAOJ,CAAAA,eAAe,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAtB,EAAjB,CAAyD,IAAI,CAAC,cAA9D,CAA6E,KAAK,CAAGtB,YAArF,EAFJ,GADJ,cAKI,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,UAAf,sBADJ,cAEI,KAAC,KAAD,EAAO,QAAQ,CAAE,kBAACK,CAAD,QAAOF,CAAAA,WAAW,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV,CAAlB,EAAjB,CAAqD,IAAI,CAAC,UAA1D,CAAqE,KAAK,CAAGpB,QAA7E,EAFJ,GALJ,cASI,aATJ,cAUI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAE,CAACqB,SAAS,CAAE,QAAZ,CAA7B,mBAVJ,GAFJ,GADJ,CAiBH,CAzCD,CA2CA,cAAe3B,CAAAA,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n\n/** */\n\nconst Login = (props) => {\n    console.log(props);\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch('https://wd85-plant-it2.herokuapp.com/user/login', {\n            method: 'POST',\n            body: JSON.stringify(\n                {user:{emailAddress: emailAddress, password: password}}\n            ),\n            headers: new Headers ({\n                'Content-Type': 'application/json'\n            })\n        }).then(\n            (response) => response.json()\n        ).then((data) => {\n            props.updateToken(data.sessionToken);\n        })\n    }\n\n    return (\n        <div className='Login'>\n            <h2>Login/Register</h2>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Label htmlFor='emailAddress'>Email</Label>\n                    <Input onChange={(e) => setEmailAddress(e.target.value)} name='emailAddress' value={ emailAddress } />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='password'>Password</Label>\n                    <Input onChange={(e) => setPassword(e.target.value)} name='password' value={ password } />\n                </FormGroup>\n                <br></br>\n                <Button type='submit' style={{textAlign: 'center'}}>Login</Button>\n            </Form>\n        </div>\n    )\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}