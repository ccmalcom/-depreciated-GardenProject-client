{"ast":null,"code":"import _slicedToArray from\"/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import DisplayPlants from'./plantTable/PlantTable';import CreatePlant from'./createPlant/CreatePlant';import PlantView from'./PlantView';import AddToGarden from'../gardens/AddToGarden';import{Container,Row,Col}from'reactstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PlantsIndex=function PlantsIndex(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),plants=_useState2[0],setPlants=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),viewActive=_useState4[0],setViewActive=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),createActive=_useState6[0],setCreateActive=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),plantToView=_useState8[0],setPlantToView=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),gardenModalActive=_useState10[0],setGardenModalActive=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),plantToGarden=_useState12[0],setPlantToGarden=_useState12[1];console.log(plants);console.log('view active:',viewActive);var fetchPlants=function fetchPlants(){fetch('http://wd85-plant-it2.herokuapp.com/plant/all',{method:'GET',headers:new Headers({'Content-Type':'application/json'})}).then(function(res){return res.json();}).then(function(plantData){setPlants(plantData);console.log(plants,plantData);});};// view functions\nvar viewPlant=function viewPlant(plant){setPlantToView(plant);console.log(plant);};var viewOn=function viewOn(){setViewActive(true);};var viewOff=function viewOff(){setViewActive(false);};// add to garden functions (ignore this for now)\nvar addToGarden=function addToGarden(plant){setPlantToGarden(plant);};var gardenModalOn=function gardenModalOn(){setGardenModalActive(true);};var gardenModalOff=function gardenModalOff(){setGardenModalActive(false);};// create functions (plantIt)\nvar createActiveOn=function createActiveOn(){setCreateActive(true);};var createActiveOff=function createActiveOff(){setCreateActive(false);};useEffect(function(){fetchPlants();},[]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:createActiveOn,children:\"PlantIt!\"}),/*#__PURE__*/_jsx(DisplayPlants,{plants:plants,viewPlant:viewPlant,viewOn:viewOn,addToGarden:addToGarden,gardenModalOn:gardenModalOn,fetchPlants:fetchPlants,token:props.token})]}),/*#__PURE__*/_jsxs(\"div\",{children:[viewActive?/*#__PURE__*/_jsx(PlantView,{plantToView:plantToView,viewOff:viewOff,addToGarden:addToGarden,gardenModalOn:gardenModalOn}):null,gardenModalActive?/*#__PURE__*/_jsx(AddToGarden,{plantToGarden:plantToGarden,gardenModalOff:gardenModalOff,token:props.token}):null,createActive?/*#__PURE__*/_jsx(CreatePlant,{fetchPlants:fetchPlants,token:props.token,createActiveOff:createActiveOff}):null]})]});// const buttonHandler = () => setCreatePlant(true);\n// <>\n//     {createPlant ? <CreatePlant setCreatePlant={setCreatePlant} sessionToken={props.sessionToken}/> : null}\n//     {!createPlant ? <Button onClick={buttonHandler}>Plant It!</Button> : null}\n// </> \n//!!! Need to add table above to display plants. Style components or bootstrap table --SC\n};export default PlantsIndex;","map":{"version":3,"sources":["/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/src/components/plants/PlantsIndex.js"],"names":["React","useState","useEffect","DisplayPlants","CreatePlant","PlantView","AddToGarden","Container","Row","Col","PlantsIndex","props","plants","setPlants","viewActive","setViewActive","createActive","setCreateActive","plantToView","setPlantToView","gardenModalActive","setGardenModalActive","plantToGarden","setPlantToGarden","console","log","fetchPlants","fetch","method","headers","Headers","then","res","json","plantData","viewPlant","plant","viewOn","viewOff","addToGarden","gardenModalOn","gardenModalOff","createActiveOn","createActiveOff","token"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DisplayPlants from './plantTable/PlantTable';\nimport CreatePlant from './createPlant/CreatePlant';\nimport PlantView from './PlantView';\nimport AddToGarden from '../gardens/AddToGarden';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst PlantsIndex = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [viewActive, setViewActive] = useState(false);\n    const [createActive, setCreateActive] = useState(false);\n    const [plantToView, setPlantToView] = useState([]);\n    const [gardenModalActive, setGardenModalActive] = useState(false);\n    const [plantToGarden, setPlantToGarden] = useState([]);\n    console.log(plants);\n    console.log('view active:', viewActive)\n    const fetchPlants = () => {\n        fetch('http://wd85-plant-it2.herokuapp.com/plant/all', {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n        })\n            .then(res => res.json())\n            .then((plantData) => {\n                setPlants(plantData)\n                console.log(plants, plantData);\n            })\n    }\n    // view functions\n    const viewPlant = (plant) => {\n        setPlantToView(plant);\n        console.log(plant);\n    }\n    const viewOn = () => {\n        setViewActive(true)\n    }\n    const viewOff = () => {\n        setViewActive(false)\n    }\n\n    // add to garden functions (ignore this for now)\n    const addToGarden = (plant) => {\n        setPlantToGarden(plant);\n    }\n    const gardenModalOn = () => {\n        setGardenModalActive(true)\n    }\n    const gardenModalOff = () => {\n        setGardenModalActive(false)\n    }\n\n    // create functions (plantIt)\n    const createActiveOn = () =>{\n        setCreateActive(true);\n    }\n    const createActiveOff = () =>{\n        setCreateActive(false)\n    }\n\n    useEffect(() => {\n        fetchPlants();\n    }, [])\n\n    return (\n        <Container>\n            <div>\n                <button onClick={createActiveOn}>PlantIt!</button>\n                <DisplayPlants plants={plants} viewPlant={viewPlant} viewOn={viewOn} addToGarden={addToGarden} gardenModalOn={gardenModalOn} fetchPlants={fetchPlants} token={props.token} />\n            </div>\n            <div>\n                {viewActive ? <PlantView plantToView={plantToView} viewOff={viewOff} addToGarden={addToGarden} gardenModalOn={gardenModalOn} /> : null}\n\n                {gardenModalActive ? <AddToGarden plantToGarden={plantToGarden} gardenModalOff={gardenModalOff} token={props.token} /> : null}\n\n                {createActive ? <CreatePlant fetchPlants={fetchPlants} token={props.token} createActiveOff={createActiveOff}/> : null }\n            </div>\n        </Container>\n    )\n    // const buttonHandler = () => setCreatePlant(true);\n\n\n    // <>\n    //     {createPlant ? <CreatePlant setCreatePlant={setCreatePlant} sessionToken={props.sessionToken}/> : null}\n    //     {!createPlant ? <Button onClick={buttonHandler}>Plant It!</Button> : null}\n    // </> \n\n    //!!! Need to add table above to display plants. Style components or bootstrap table --SC\n}\nexport default PlantsIndex;"]},"metadata":{},"sourceType":"module"}