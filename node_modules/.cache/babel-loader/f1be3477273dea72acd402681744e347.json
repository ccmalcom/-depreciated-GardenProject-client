{"ast":null,"code":"var _jsxFileName = \"/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [zipCode, setZipCode] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://wd85-plant-it.herokuapp.com/user/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: {\n          firstName: firstName,\n          lastName: lastName,\n          emailAddress: emailAddress,\n          password: password,\n          zipCode: zipCode\n        }\n      }),\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      })\n    }).then(response => response.json()).then(data => {\n      props.updateToken(data.sessionToken);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setFirstName(e.target.value),\n          name: \"firstName\",\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setLastName(e.target.value),\n          name: \"lastName\",\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"emailAddress\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setEmailAddress(e.target.value),\n          name: \"emailAddress\",\n          value: emailAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setPassword(e.target.value),\n          name: \"password\",\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"zipCode\",\n          children: \"Zipcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => setZipCode(e.target.value),\n          name: \"zipCode\",\n          value: zipCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"btIkGVQRzSQ3JxZs14KdeyyK7pI=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/shelley/Desktop/ElevenFiftyProjects/JavaScript-Library/projects/GardenProject-client/plant-it/src/components/auth/Register.js"],"names":["React","useState","Link","Form","FormGroup","Label","Input","Button","Register","props","firstName","setFirstName","lastName","setLastName","emailAddress","setEmailAddress","password","setPassword","zipCode","setZipCode","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","user","headers","Headers","then","response","json","data","updateToken","sessionToken","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst Register = (props) => {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    const [zipCode, setZipCode] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch('http://wd85-plant-it.herokuapp.com/user/register', {\n            method: 'POST',\n            body: JSON.stringify({user:{firstName: firstName, lastName: lastName, emailAddress: emailAddress, password: password, zipCode: zipCode}}),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then(\n            (response) => response.json()\n        ).then((data) => {\n            props.updateToken(data.sessionToken)\n        })\n        \n    }\n\n    return (\n        <div className='Register'>\n            <h1>Register</h1>\n            <Form onSubmit={ handleSubmit }>\n                <FormGroup>\n                    <Label htmlFor='firstName'>First Name</Label>\n                    <Input onChange={(e) => setFirstName(e.target.value)} name='firstName' value={firstName} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='lastName'>Last Name</Label>\n                    <Input onChange={(e) => setLastName(e.target.value)} name='lastName' value={lastName} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='emailAddress'>Email</Label>\n                    <Input onChange={(e) => setEmailAddress(e.target.value)} name='emailAddress' value={emailAddress} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='password'>Password</Label>\n                    <Input onChange={(e) => setPassword(e.target.value)} name='password' value={password} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='zipCode'>Zipcode</Label>\n                    <Input onChange={(e) => setZipCode(e.target.value)} name='zipCode' value={zipCode} />\n                </FormGroup>\n                <br></br>\n                <Button type='submit'>Sign Up</Button>\n            </Form>\n        </div>\n    )\n\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}