{"version":3,"sources":["assets/exit.png","components/logout/Logout.js","site/Sitebar.js","components/auth/Login.js","components/auth/Register.js","components/auth/Auth.js","components/auth/Modal.js","assets/garden.jpg","site/Home.js","components/plants/plantTable/PlantTable.js","components/plants/createPlant/CreatePlant.js","components/plants/PlantView.js","components/gardens/AddToGarden.js","components/plants/PlantsIndex.js","components/gardens/GardenTable.js","components/gardens/GardenIndex.js","App.js","reportWebVitals.js","index.js"],"names":["Logout","props","id","src","exitSign","alt","onClick","clearSession","Div","styled","div","Sitebar","Nav","Navbar","className","NavLink","href","style","color","textDecoration","NavbarBrand","Login","console","log","useState","emailAddress","setEmailAddress","password","setPassword","Form","onSubmit","e","preventDefault","fetch","method","body","JSON","stringify","user","headers","Headers","then","response","json","data","updateToken","sessionToken","FormGroup","Label","htmlFor","Input","onChange","target","value","name","Button","type","textAlign","Register","firstName","setFirstName","lastName","setLastName","zipCode","setZipCode","Auth","Container","Row","Col","md","ModalExample","modal","setModal","nestedModal","setNestedModal","closeAll","setCloseAll","toggle","toggleNested","Modal","isOpen","ModalBody","onClosed","undefined","ModalHeader","ModalFooter","Wrapper","img","Title","Section","Paragraph","p","Home","cascade","DisplayPlants","plants","map","plant","index","scope","plantName","typeOfPlant","lightingNeeds","waterNeeds","fertilizerNeeds","gardenModalOn","addToGarden","viewOn","viewPlant","CreatePlant","setPlantName","setTypeOfPlant","setLightingNeeds","setWaterNeeds","setFertilizerNeeds","notes","setNotes","size","aria-labelledby","centered","createActiveOff","icon","faArrowAltCircleLeft","res","setCreatePlant","placeholder","fetchPlants","PlantView","viewOff","plantToView","AddToGarden","plantToGarden","useEffect","token","gardenModalOff","faCheckCircle","PlantsIndex","setPlants","viewActive","setViewActive","createActive","setCreateActive","setPlantToView","gardenModalActive","setGardenModalActive","setPlantToGarden","plantData","GardenTable","Table","striped","GardenIndex","fetchGarden","App","setSessionToken","localStorage","getItem","newToken","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5468c78d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/exit.45c6eaa4.png\";","import React from 'react';\nimport './Logout.css';\nimport exitSign from '../../assets/exit.png';\n\n\n\n\nconst Logout = (props) => {\n    return (\n        <div>\n            <img id=\"logout\" \n            src={exitSign} \n            alt=\"exitSign\" \n            onClick={props.clearSession}/>\n        </div>\n    )\n}\n\nexport default Logout;","import React from 'react';\nimport { Nav, Navbar, NavLink, NavbarBrand } from 'reactstrap';\nimport Logout from '../components/logout/Logout.js';\nimport styled from 'styled-components';\n\nconst Div = styled.div `\n    align-content: left;\n`\n\n\nconst Sitebar = (props) => {\n    return(\n        <div>\n            <Nav>\n                <Navbar className='sitebar'>\n                    <Div>\n                        <NavLink href=\"/\" style={{color: 'white', textDecoration: 'none'}}>Home</NavLink>\n                    </Div>\n                    <Div>\n                        <NavLink href=\"/\" style={{color: 'white', textDecoration: 'none'}}>Login/Signup</NavLink>\n                    </Div>\n                    <Div>\n                        <NavbarBrand href='/'>\n                            <Logout clearSession={props.clearSession}/>\n                        </NavbarBrand>\n                    </Div>\n                </Navbar>\n            </Nav>\n        </div>    \n    );\n};\n\nexport default Sitebar;","import React, { useState } from 'react';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\n\n/** */\n\nconst Login = (props) => {\n    console.log(props);\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch('https://wd85-plant-it2.herokuapp.com/user/login', {\n            method: 'POST',\n            body: JSON.stringify(\n                {user:{emailAddress: emailAddress, password: password}}\n            ),\n            headers: new Headers ({\n                'Content-Type': 'application/json'\n            })\n        }).then(\n            (response) => response.json()\n        ).then((data) => {\n            props.updateToken(data.sessionToken);\n        })\n    }\n\n    return (\n        <div className='Login'>\n            <h2>Login/Register</h2>\n            <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                    <Label htmlFor='emailAddress'>Email</Label>\n                    <Input onChange={(e) => setEmailAddress(e.target.value)} name='emailAddress' value={ emailAddress } />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='password'>Password</Label>\n                    <Input onChange={(e) => setPassword(e.target.value)} name='password' value={ password } />\n                </FormGroup>\n                <br></br>\n                <Button type='submit' style={{textAlign: 'center'}}>Login</Button>\n            </Form>\n        </div>\n    )\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nconst Register = (props) => {\n    const [firstName, setFirstName] = useState('');\n    \n    const [lastName, setLastName] = useState('');\n    const [emailAddress, setEmailAddress] = useState('');\n    const [password, setPassword] = useState('');\n    const [zipCode, setZipCode] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        fetch('https:wd85-plant-it2.herokuapp.com/user/register', {\n\n            method: 'POST',\n            body: JSON.stringify({user:{firstName: firstName, lastName: lastName, emailAddress: emailAddress, password: password, zipCode: zipCode}}),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then(\n            (response) => response.json()\n        ).then((data) => {\n            props.updateToken(data.sessionToken)\n        })\n        \n    }\n\n    return (\n        <div className='Register'>\n            <h1>Register</h1>\n            <Form onSubmit={ handleSubmit }>\n                <FormGroup>\n                    <Label htmlFor='firstName'>First Name</Label>\n                    <Input onChange={(e) => setFirstName(e.target.value)} name='firstName' value={firstName} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='lastName'>Last Name</Label>\n                    <Input onChange={(e) => setLastName(e.target.value)} name='lastName' value={lastName} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='emailAddress'>Email</Label>\n                    <Input onChange={(e) => setEmailAddress(e.target.value)} name='emailAddress' value={emailAddress} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='password'>Password</Label>\n                    <Input onChange={(e) => setPassword(e.target.value)} name='password' value={password} />\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor='zipCode'>Zipcode</Label>\n                    <Input onChange={(e) => setZipCode(e.target.value)} name='zipCode' value={zipCode} />\n                </FormGroup>\n                <br></br>\n                <Button type='submit'>Sign Up</Button>\n            </Form>\n        </div>\n    )\n\n}\n\nexport default Register;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport Register from './Register';\nimport Login from './Login';\n\n\nconst Auth = (props) => {\n    return(\n        <Container className='auth-container'>\n            <Row>\n                <Col md='6'>\n                    <Register updateToken={props.updateToken} />\n                </Col>\n                <Col md='6' className='login-col'>\n                    <Login updateToken={props.updateToken} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Auth;","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport styled from 'styled-components';\nimport Login from './Login';\nimport Register from './Register';\nimport '../auth/Modal.css';\n\n\n\n\nconst ModalExample = (props) => {\n    const {\n        className\n    } = props;\n\n    const [modal, setModal] = useState(false);\n    const [nestedModal, setNestedModal] = useState(false);\n    const [closeAll, setCloseAll] = useState(false);\n\n    const toggle = () => setModal(!modal);\n    const toggleNested = () => {\n    setNestedModal(!nestedModal);\n    setCloseAll(false);\n    }\n    const toggleAll = () => {\n    setNestedModal(!nestedModal);\n    setCloseAll(true);\n    }\n\n    return (\n    <div className='Box'>\n        \n        <Button id='start' onClick={toggle}>Start Planting!</Button>\n        \n        <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalBody>\n        <Login />\n        <br />\n        <Button onClick={toggleNested}>Register Now!</Button>\n        <Modal isOpen={nestedModal} toggle={toggleNested} onClosed={closeAll ? toggle : undefined}>\n            <ModalHeader>Register now to start your garden!</ModalHeader>\n            <ModalBody>\n                <Register />\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={toggleNested}>Already have an account? Back to Login</Button>\n            </ModalFooter>\n            </Modal>\n        </ModalBody>\n        </Modal>\n    </div>\n    );\n}\n\nexport default ModalExample;","export default __webpack_public_path__ + \"static/media/garden.fc080d53.jpg\";","import React from 'react';\n//import { Button } from 'reactstrap';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal';\nimport img from '../assets/garden.jpg';\nimport ModalExample from '../components/auth/Modal';\n\nconst Wrapper = styled.div`\n    background-image: url(${img});\n    background-size: cover;\n    background-position: center;\n    height: 100vh;\n    \n`\nconst Title = styled.div`\n    font-family: 'Yeseva One';\n    font-size: 100px;\n    color: white;\n    text-align: center;\n    padding-top: 90px;\n    `\n\nconst Section = styled.div`\n    font-family: 'Yeseva One';\n    font-size: 70px;\n    color: white;\n    text-align: center;\n    \n`\n\nconst Paragraph = styled.p`\n    font-family: 'Nunito';\n    font-size: 30px;\n    color: white;\n    text-align: center;\n    padding: 0px;\n    margin: 50px;\n    `\nconst Div = styled.div`\n    padding: 50px;\n    margin-left: 575px;\n    font-family: 'Yeseva One';\n`\n\n\nconst Home = () => {\n    return (\n        <Wrapper>\n            <Fade cascade>\n                <Title>\n                    <p>Plant it</p>\n                </Title>\n                <Section>\n                <p>An open-source garden index, stocked by you.</p>\n                </Section>\n                <Paragraph>\n                Search for plants below. If you can't find what you're looking for, add it to the list! Create an account (or login) to access MyGarden, where you can add plants from the index to your very own virtual garden to keep track of everything you grow and how to grow it.\n                </Paragraph>\n                \n                <ModalExample />\n                \n                \n            </Fade>\n        </Wrapper>\n    )\n}\n\nexport default Home;","import React, {useState} from 'react';\n// import './Plant.css'\n\nconst DisplayPlants = (props) => {\n\n    const plantMapper = () =>{\n        return props.plants.map((plant, index) =>{\n            return(\n            <tr key={index}>\n                <th scope='row'>{plant.plantName}</th>\n                <td>{plant.typeOfPlant}</td>\n                <td>{plant.lightingNeeds}</td>\n                <td>{plant.waterNeeds}</td>\n                <td>{plant.fertilizerNeeds}</td>\n                <td>\n                    <button onClick={()=>{props.gardenModalOn(); props.addToGarden(plant)}}>MyGarden <b>+</b></button>\n                    <button onClick={() => {props.viewOn(); props.viewPlant(plant)}}>View</button>\n                </td>\n            </tr>\n            )\n        })\n    }\n    return (\n        <>\n            <h2>Plant Index</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Plant</th>\n                        <th>Type</th>\n                        <th>Lighting Needs</th>\n                        <th>Water Needs</th>\n                        <th>Fertilizer Needs</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {plantMapper()}\n                </tbody>\n            </table>\n        </>\n    )\n};\n\nexport default DisplayPlants;","// import { formatMs, FormGroup } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport './CreatePlant.css';\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst CreatePlant = (props) => {\n    const [plantName, setPlantName] = useState('');\n    const [typeOfPlant, setTypeOfPlant] = useState('');\n    const [lightingNeeds, setLightingNeeds] = useState('');\n    const [waterNeeds, setWaterNeeds] = useState('');\n    const [fertilizerNeeds, setFertilizerNeeds] = useState('');\n    const [notes, setNotes] = useState('');\n    \n\n    const postPlant = e => {\n        e.preventDefault();\n\n        fetch('http://wd85-plant-it.herokuapp.com/plant/create', {\n            method: 'POST',\n            body: JSON.stringify({\n                plantName: plantName,\n                typeOfPlant: typeOfPlant,\n                lightingNeeds: lightingNeeds,\n                waterNeeds: waterNeeds,\n                fertilizerNeeds: fertilizerNeeds,\n                notes: notes,\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.sessionToken\n            })\n        })\n        .then(res => res.json())\n        .then(json => {\n            console.log(json);\n            props.setCreatePlant(false);\n        })\n    }\n\n    return (\n\n        //! We can change this table to use something other than reactstrap \n        <div>\n            <Modal isOpen={true}\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            >\n                <ModalHeader>\n                <button onClick={props.createActiveOff}><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\"/></button>\n                <h3>Details</h3>\n                </ModalHeader>\n            <ModalBody>\n            <Form onSubmit={postPlant}>\n                <FormGroup>\n                    <Label>Plant Name</Label>\n                    <Input type='text' value={plantName} placeholder='Lavender' onChange={(e) => setPlantName(e.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Type of Plant</Label>\n                    <Input type='text' value={typeOfPlant} placeholder='Shrub' onChange={(e) => setTypeOfPlant(e.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Lighting Needs</Label>\n                    <Input type='text' value={lightingNeeds} placeholder='Full sun' onChange={(e) => setLightingNeeds(e.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Water Needs</Label>\n                    <Input type='text' value={waterNeeds} placeholder='drought-tolerant after established; water regularly when young' onChange={(e) => setWaterNeeds(e.target.value)} />\n                </FormGroup>\n                <FormGroup>\n                    <Label>Fertilizer Needs</Label>\n                    <Input type='text' value={fertilizerNeeds} placeholder='very little, slow release once per spring at most' onChange={(e) => setFertilizerNeeds(e.target.value)}/>\n                </FormGroup>\n                <FormGroup>\n                    <Label>Notes</Label>\n                    <Input type='text' value={notes} placeholder='Part of the mint family; smells wonderful!' onChange={(e) => setNotes(e.target.value)} />\n                </FormGroup>\n                <Button type='submit' onClick={()=>{props.createActiveOff(); props.fetchPlants()}}>Plant it!</Button>\n            </Form>\n            </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CreatePlant; \n\n","// ! When you click 'view plant' this will toggle\n\n\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction PlantView(props) {\n    \n    return (\n    <Modal isOpen={true}\n    {...props}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered\n    >\n        <ModalHeader>\n        <button onClick={props.viewOff}><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\"/></button>\n            <h3>Details</h3>\n        </ModalHeader>\n        <ModalBody>\n            <dl>\n                <h4>{props.plantToView.plantName}</h4>\n                <br />\n                <dt>Type of Plant:</dt>\n                    <dd>{props.plantToView.typeOfPlant}</dd>\n                <dt>Lighting Needs:</dt>\n                    <dd>{props.plantToView.lightingNeeds}</dd>\n                <dt>Water Needs:</dt>\n                    <dd>{props.plantToView.waterNeeds}</dd>\n                <dt>Fertilizer Needs:</dt>\n                    <dd>{props.plantToView.fertilizerNeeds}</dd>\n                <dt>Notes:</dt>\n                    <dd>{props.plantToView.notes}</dd>\n            </dl>\n        </ModalBody>\n        <ModalFooter>\n        <button>Edit Details</button>\n        <button onClick={()=>{props.gardenModalOn(); props.addToGarden(props.plantToView); props.viewOff()}}>MyGarden <b>+</b></button>\n        <button>Delete</button>\n        </ModalFooter>\n    </Modal>\n    );\n}\n\nexport default PlantView;","import React, {useState, useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-solid-svg-icons'\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst AddToGarden = (props) =>{\n    const plantName = props.plantToGarden.plantName\n    const typeOfPlant = props.plantToGarden.typeOfPlant\n    const lightingNeeds = props.plantToGarden.lightingNeeds\n    const waterNeeds = props.plantToGarden.waterNeeds\n    const fertilizerNeeds = props.plantToGarden.fertilizerNeeds\n    const notes = props.plantToGarden.notes\n\n    const sendToGarden = () =>{\n        fetch(`http://wd85-plant-it.herokuapp.com/garden/create`, {\n            method: 'POST',\n            body: JSON.stringify({plantName: plantName, typeOfPlant: typeOfPlant, lightingNeeds: lightingNeeds, waterNeeds: waterNeeds, fertilizerNeeds: fertilizerNeeds, notes: notes}),\n            headers: new Headers ({\n                'Content-Type': 'application/json',\n                'Authorization' : props.token\n            })\n        })\n        .then(res => console.log(res))\n    }\n\n    useEffect(() => {\n        sendToGarden();\n    }, [])\n\n    return(\n        <Modal isOpen={true}\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        >\n            <ModalHeader>\n            <button onClick={props.gardenModalOff}><FontAwesomeIcon icon={faArrowAltCircleLeft} size=\"3x\"/></button>\n                <h3>Plant added to MyGarden!</h3>\n            </ModalHeader>\n            <ModalBody>\n                <FontAwesomeIcon icon={faCheckCircle} size='6x'/>\n                <p>You can now keep track this plant in the MyGarden section of the site. Click the button below to go there now, or the back arrow to return to the plant index!</p>\n            </ModalBody>\n            <ModalFooter>\n            <button>Go to MyGarden</button>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default AddToGarden;","import React, { useState, useEffect } from 'react';\nimport DisplayPlants from './plantTable/PlantTable';\nimport CreatePlant from './createPlant/CreatePlant';\nimport PlantView from './PlantView';\nimport AddToGarden from '../gardens/AddToGarden';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst PlantsIndex = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [viewActive, setViewActive] = useState(false);\n    const [createActive, setCreateActive] = useState(false);\n    const [plantToView, setPlantToView] = useState([]);\n    const [gardenModalActive, setGardenModalActive] = useState(false);\n    const [plantToGarden, setPlantToGarden] = useState([]);\n    console.log(plants);\n    console.log('view active:', viewActive)\n    const fetchPlants = () => {\n        fetch('http://wd85-plant-it2.herokuapp.com/plant/all', {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            }),\n        })\n            .then(res => res.json())\n            .then((plantData) => {\n                setPlants(plantData)\n                console.log(plants, plantData);\n            })\n    }\n    // view functions\n    const viewPlant = (plant) => {\n        setPlantToView(plant);\n        console.log(plant);\n    }\n    const viewOn = () => {\n        setViewActive(true)\n    }\n    const viewOff = () => {\n        setViewActive(false)\n    }\n\n    // add to garden functions (ignore this for now)\n    const addToGarden = (plant) => {\n        setPlantToGarden(plant);\n    }\n    const gardenModalOn = () => {\n        setGardenModalActive(true)\n    }\n    const gardenModalOff = () => {\n        setGardenModalActive(false)\n    }\n\n    // create functions (plantIt)\n    const createActiveOn = () =>{\n        setCreateActive(true);\n    }\n    const createActiveOff = () =>{\n        setCreateActive(false)\n    }\n\n    useEffect(() => {\n        fetchPlants();\n    }, [])\n\n    return (\n        <Container>\n            <div>\n                <button onClick={createActiveOn}>PlantIt!</button>\n                <DisplayPlants plants={plants} viewPlant={viewPlant} viewOn={viewOn} addToGarden={addToGarden} gardenModalOn={gardenModalOn} fetchPlants={fetchPlants} token={props.token} />\n            </div>\n            <div>\n                {viewActive ? <PlantView plantToView={plantToView} viewOff={viewOff} addToGarden={addToGarden} gardenModalOn={gardenModalOn} /> : null}\n\n                {gardenModalActive ? <AddToGarden plantToGarden={plantToGarden} gardenModalOff={gardenModalOff} token={props.token} /> : null}\n\n                {createActive ? <CreatePlant fetchPlants={fetchPlants} token={props.token} createActiveOff={createActiveOff}/> : null }\n            </div>\n        </Container>\n    )\n    // const buttonHandler = () => setCreatePlant(true);\n\n\n    // <>\n    //     {createPlant ? <CreatePlant setCreatePlant={setCreatePlant} sessionToken={props.sessionToken}/> : null}\n    //     {!createPlant ? <Button onClick={buttonHandler}>Plant It!</Button> : null}\n    // </> \n\n    //!!! Need to add table above to display plants. Style components or bootstrap table --SC\n}\nexport default PlantsIndex;","import React from 'react';\nimport { Table, Button } from 'reactstrap';\n// import './Plant.css'\n\nconst GardenTable = (props) => {\n\n\n    // const deleteGarden = () => {\n    //     fetch(`http://wd85-plant-it.herokuapp.com/garden/${plantName}`, {\n    //         method: 'Delete',\n    //         headers: new Headers({\n    //             'Content-Type': 'application/json',\n    //             'Authorization': props.token\n    //         })\n    //     })\n    //             .then(() => props.fetchGarden())\n    //     }\n\n\n\n\n    const gardenMapper = () => {\n        // return props.plants.map((plant, index) => {\n        return (\n            <tr>\n                {/* <td>{plant.plantName}</td> */}\n                {/* <td>{plant.typeOfPlant}</td> */}\n                <td>plantName</td>\n                <td>type</td>\n                <td>\n                    <button>View</button>\n                    <Button>Delete</Button>\n                </td>\n            </tr>\n        )\n        // })\n    }\n    return (\n        <>\n            <h2>Garden Index</h2>\n            <Table striped>\n                <tbody>\n                    {gardenMapper()}\n                </tbody>\n            </ Table>\n        </>\n    )\n}\nexport default GardenTable;","import React, { useState, useEffect } from 'react';\n//import DisplayPlants from './plantTable/PlantTable';\n//import CreatePlant from './createPlant/CreatePlant';\n//import PlantView from './PlantView';\nimport { Container, Row } from 'reactstrap';\nimport GardenTable from './GardenTable'\n\nconst GardenIndex = (props) => {\n\n    const [plants, setPlants] = useState([]);\n    const [viewActive, setViewActive] = useState(false);\n    const [plantToView, setPlantToView] = useState([]);\n    const [plantName, setPlantName] = useState(' ')\n    let baseURL = 'http://wd85-plant-it2.herokuapp.com/garden/all';\n\n    const fetchGarden = () => {\n        fetch(baseURL, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': props.token\n            })\n        })\n            .then((res) => res.json())\n            .then((plantData) => {\n                setPlants(plantData)\n                console.log(plants, plantData);\n            })\n    }\n\n\n\n    //view functions\n    const viewPlant = (plant) => {\n        setPlantToView(plant);\n        //     console.log(garden);\n    }\n    const viewOn = () => {\n    setViewActive(true)\n}\nconst viewOff = () => {\n    setViewActive(false)\n}\n\n\n\nuseEffect(() => {\n    fetchGarden();\n}, [])\n\nreturn (\n    <Container>\n        <Row>\n            <GardenTable plants={plants} viewPlant={viewPlant} viewOn={viewOn} fetchGarden={fetchGarden} token={props.token} />\n\n            {/* {viewActive ? <GardenView plantToView={plantToView} viewOff={viewOff} token={props.token} fetchGarden={fetchGarden} /> : <></>} */}\n        </Row>\n    </Container>\n)\n}\n\n\n\n\nexport default GardenIndex;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n//import Header from './site/Header';\nimport Sitebar from './site/Sitebar';\nimport Login from '../src/components/auth/Login';\nimport Auth from './components/auth/Auth';\nimport Footer from './site/Footer';\nimport ModalExample from './components/auth/Modal';\n\nimport SearchBar from './components/searchBar/SearchBar';\n// import SearchPlants from './components/searchBar/Search';\nimport Home from './site/Home';\n\nimport PlantsIndex from './components/plants/PlantsIndex';\nimport GardenIndex from './components/gardens/GardenIndex'\n\n\n\nfunction App() {\n  const [sessionToken, setSessionToken] = useState('');\n\n  useEffect (() =>{ \n    if(localStorage.getItem('token')){\n      setSessionToken(localStorage.getItem('token'));\n    }\n  }, [])\n\n  const updateToken = (newToken) =>{ \n    localStorage.setItem('token', newToken);\n    setSessionToken(newToken);\n    \n  }\n\n  const clearToken =()=>{\n    localStorage.clear();\n    setSessionToken('');\n  }\n  \n  // const protectedViews = () =>{\n  //   return(sessionToken === localStorage.getItem('token') ? <WorkoutIndex token={sessionToken}/> : <Auth updateToken={updateToken}/>)\n  // }\n  return (\n    <div className=\"App\">\n      {console.log(sessionToken)}\n\n      <Sitebar />\n      <Home />\n      \n\n      {/* <Auth /> */}\n      <br></br>\n      {/* <Footer /> */}\n      {/* <Header /> */}\n      {/* <Login /> */}\n      <ModalExample />\n\n\n\n\n      {/* <Sitebar />\n      <br></br>\n\n      <Header />\n      <br></br>\n      \n      <SearchPlants />\n      <br></br>\n      <Footer />\n      \n      \n    <Footer /> */}\n      <Auth updateToken={updateToken}/>\n\n      \n      <GardenIndex token={sessionToken}/>\n\n      \n\n\n\n\n\n      {/* <SearchPlants /> */}\n      <PlantsIndex token={sessionToken}/>\n\n      \n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-landing-page';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}